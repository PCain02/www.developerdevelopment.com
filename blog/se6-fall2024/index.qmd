---
author: [Hemani Alaparthi, Gregory M. Kapfhammer]
title: 'How to Lead a Team'
date: '2024-10-26'
date-format: long
categories: [post, professional development, software engineering]
description: <em>How can we cultivate great leaders in and for our team?</em>
toc: true
page-layout: full
---

## Overview

This blog post explores the ["How to Lead a Team"](https://abseil.io/resources/swe-book/html/ch05.html) chapter from [Google's Software Engineering](https://abseil.io/resources/swe-book) book, which tackles the challenges of leading software teams in a modern tech environment. This insightful chapter breaks down Google's approach to engineering leadership, from managing people and technical decisions to transitioning from a coder to a leader. Let's examine the key lessons we can extract from Google's leadership playbook and see how we can apply them in our own software engineering team!


## Summary

In software engineering, effective leadership goes beyond simply managing—it involves empowering, supporting, and guiding a team with humility, trust, and respect. This chapter covers essential leadership strategies for fostering a productive team culture, from tracking team happiness to encouraging growth and autonomy. Leaders should balance delegation with hands-on involvement, helping team members advance without micromanagement while shielding them from unnecessary organizational chaos. By focusing on both individual and team development, good managers inspire motivation through autonomy, mastery, and purpose, creating a workplace where engineers thrive and innovation flourishes.


## Moving from an Individual Contributor Role to a Leadership Role

Think about that team project for CS203 - leadership isn't always volunteering to be the team lead. Sometimes it just happens naturally, like when you find yourself organizing the git repo or messaging everyone to coordinate late-night debugging sessions. Tech folks call this "manageritis" - that moment when you realize you've accidentally become the go-to person for decisions and team conflicts. It's less about the title and more about that natural shift from coding to helping your classmates work better together.

### Leadership Resistance

- Less Time Coding: The biggest deterrent for most developers is the reduced time spent actually writing code
- Invisible Progress: Unlike coding, where you can point to specific outputs daily, leadership work often feels intangible
- The Peter Principle Fear: Fear of being promoted to their level of incompetence, and they fear following the same path
- Bad experiences:  Previous experiences with poor managers can make the role seem unappealing

### Why Consider Leadership?

Despite these valid concerns, leadership roles offer unique opportunities:

- The chance to scale your impact beyond what you could achieve individually
- Discover hidden leadership talents you might possess
- The opportunity to guide projects and teams in meaningful directions

### The Secret: Servant Leadership

The key to effective technical leadership isn't about control - it's about service. The best leaders:

- Focus on removing obstacles for their team
- Stay humble and maintain hands-on involvement when needed
- Resist the urge to micromanage

**Discussion Question: Think about your experience leading a course project in this classs - what's one 'invisible' task you did as a leader that was important but hard to measure like counting lines of code?"**


## Key Takeaways

The key takeaways from this chapter is that exceptional leadership involves empowering and enabling a team rather than merely _directing_ them. Effective leaders delegate thoughtfully, offering both guidance and opportunities for team members to grow. Monitoring happiness and supporting team members’ personal and professional goals leads to a more motivated, resilient team. Additionally, balancing transparency with shielding from external chaos helps teams stay focused and productive. Finally, the pillars of autonomy, mastery, and purpose are fundamental to increasing intrinsic motivation, fostering a culture where each team member feels valued and invested in their work.
